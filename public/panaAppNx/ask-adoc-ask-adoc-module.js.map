{"version":3,"sources":["/home/angeloacr/Proyectos/PanaDoc/PanadocNx/node_modules/ngx-wig/fesm5/ngx-wig.js","./src/app/ask-adoc/askadoc.component.html","./src/app/ask-adoc/ask-adoc.module.ts","./src/app/ask-adoc/ask.service.ts","./src/app/ask-adoc/askadoc.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACoK;AACrI;AACP;;AAEzD;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,kBAAkB,4DAAc;;AAEhC;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6BAA6B,SAAS,sDAAQ,GAAG,aAAa,EAAE,KAAK;AACrE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,yCAAyC;AACzC,wCAAwC;AACxC;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,uDAAuD;AACvD,SAAS,4BAA4B,OAAO,oDAAM,oBAAoB;AACtE,MAAM;AACN,8DAA8D,sEAAgB,EAAE,mDAAmD,iCAAiC,4DAAM,WAAW,EAAE,mDAAmD;AAC1O;AACA,CAAC;AACD;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,EAAE;AACxB;AACA,oBAAoB;AACpB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,4DAA4D,sDAAsD;AAClH;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,uiBAAuiB,gBAAgB,kUAAkU,6DAA6D,sXAAsX,mDAAmD,gTAAgT,oBAAoB;AACnqD;AACA;AACA;AACA,qCAAqC,gEAAiB;AACtD,yCAAyC,gEAAU;AACnD,wCAAwC;AACxC;AACA,yCAAyC,wBAAwB,EAAE;AACnE;AACA;AACA;AACA,mCAAmC,+DAAiB;AACpD,mDAAmD,yBAAyB,0BAA0B,sBAAsB,QAAQ,cAAc,UAAU,SAAS,YAAY,cAAc,SAAS,UAAU,gBAAgB,eAAe,cAAc,uDAAuD,sBAAsB,0BAA0B,kBAAkB,qBAAqB,mBAAmB,SAAS,+BAA+B,kBAAkB,iBAAiB,qBAAqB,oBAAoB,iCAAiC,oBAAoB,kBAAkB,WAAW,cAAc,kBAAkB,aAAa,gBAAgB,YAAY,WAAW,gBAAgB,qBAAqB,sBAAsB,0BAA0B,kBAAkB,mCAAmC,gBAAgB,gBAAgB,cAAc,gBAAgB,gBAAgB,wBAAwB,cAAc,kBAAkB,gBAAgB,cAAc,WAAW,gCAAgC,WAAW,UAAU,sBAAsB,YAAY,SAAS,yBAAyB,WAAW,0BAA0B,kBAAkB,OAAO,MAAM,QAAQ,SAAS,gBAAgB,YAAY,YAAY,gBAAgB,6BAA6B,cAAc,gBAAgB,kCAAkC,gBAAgB,cAAc,cAAc,kBAAkB,gCAAgC,aAAa,uBAAuB,eAAe,WAAW,wBAAwB,qBAAqB,gBAAgB,cAAc,WAAW,YAAY,SAAS,UAAU,WAAW,iBAAiB,6BAA6B,kCAAkC,4BAA4B,YAAY,kBAAkB,eAAe,iBAAiB,UAAU,qBAAqB,mBAAmB,8CAA8C,UAAU,mBAAmB,sBAAsB,oBAAoB,eAAe,0BAA0B,WAAW,YAAY,aAAa,SAAS,uBAAuB,eAAe,iBAAiB,WAAW,YAAY,YAAY,WAAW,yBAAyB,SAAS,oBAAoB,WAAW,iBAAiB,UAAU,+BAA+B,0BAA0B,WAAW,qBAAqB,MAAM,qBAAqB,WAAW,UAAU,uBAAuB,WAAW,oCAAoC,44BAA44B,YAAY,oCAAoC,wWAAwW,aAAa,oCAAoC,+mBAA+mB,WAAW,oCAAoC,i7BAAi7B,cAAc,oCAAoC,ijCAAijC,cAAc,oCAAoC,owBAAowB,gBAAgB,oCAAoC,m4BAAm4B;AAC7pQ,iBAAiB;AACjB;AACA;AACA,kDAAkD;AAClD,SAAS,6BAA6B;AACtC,SAAS,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9E,SAAS,gCAAgC,OAAO,oDAAM,qBAAqB;AAC3E,MAAM;AACN;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,yBAAyB,OAAO,oDAAM,EAAE;AACxC,0BAA0B,OAAO,uDAAS,2BAA2B,OAAO,wDAAU,EAAE,IAAI;AAC5F;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iDAAiD;AAClE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,0DAAW;AACnC;AACA;AACA;AACA,yBAAyB,8CAA8C;AACvE,yBAAyB,8CAA8C;AACvE,yBAAyB,iDAAiD;AAC1E;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA,aAAa,mEAAmE;AAChF;AACA;AACA;AACA,SAAS,gEAAgE;AACzE;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE0J;AAC1J;;;;;;;;;;;;AC5jBA,6zBAA6zB,gBAAgB,86BAA86B,uV;;;;;;;;;;;;;;;;;;;;;;;;ACAltD;AACM;AACR;AACgB;AAEK;AACrB;AAC2B;AAChB;AAClD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAqB;KACjC;CACF,CAAC;AAOF;IAAA;IAA6B,CAAC;IAAjB,aAAa;QALzB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,wEAAqB,CAAC;YACrC,OAAO,EAAE,CAAC,4DAAY,EAAE,oDAAQ;gBAC9B,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,+DAAU,EAAE,0DAAW,EAAE,oDAAY,EAAE,kEAAmB,CAAC;SAC7F,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACrBiB;AACL;AAKyB;AACF;AACF;AACC;AAE5D,IAAM,OAAO,GAAG,qEAAW,CAAC,UAAU,GAAG,UAAU,CAAC;AAIpD;IAAgC,oEAAW;IACzC,oBAAoB,IAAgB;QAApC,YACE,iBAAO,SACR;QAFmB,UAAI,GAAJ,IAAI,CAAY;;IAEpC,CAAC;IACD,+BAAU,GAAV,UAAW,MAAc;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,OAAO,SAAI,MAAM,CAAC,UAAY,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC;aAC1E,IAAI,CAAC,0DAAG,CAAC,kBAAQ,IAAM,OAAQ,CAAC,CAAC,QAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,oCAAe,GAAf,UAAgB,QAAkB;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CACzD,gEAAS,CAAC,kBAAQ;YAChB,OAAO,+CAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAuB,GAAvB;QAEE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,OAAO,GAAG,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC;aAC/D,IAAI,CACH,0DAAG,CAAC,mBAAS;YACX,gBAAS,CAAC,GAAG,CAAC,WAAC;gBACb,IAAM,QAAQ,GAAa;oBACzB,GAAG,EAAE,CAAC,CAAC,GAAG;oBACV,OAAO,EAAE,CAAC,CAAC,MAAM;oBACjB,KAAK,EAAE,CAAC,CAAC,KAAK;oBACd,OAAO,EAAE,CAAC,CAAC,QAAQ;iBACpB;gBACD,OAAO,QAAQ,CAAC;YAClB,CAAC,CAAC;QARF,CAQE,CAAC,EACL,iEAAU,CAAC,WAAC;YACV,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,OAAO,EAAE;QACX,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,2CAAsB,GAAtB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,OAAO,GAAG,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC;aACrE,IAAI,CACH,iEAAU,CAAC,WAAC;YACV,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,OAAO,EAAE;QACX,CAAC,CAAC,CACH,CAAC;IACN,CAAC;;gBA5CyB,+DAAU;;IADzB,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAE0B,+DAAU;OADzB,UAAU,CA+CtB;IAAD,iBAAC;CAAA,CA/C+B,sEAAW,GA+C1C;AA/CsB;;;;;;;;;;;;;;;;;;;;;;;;ACf2B;AAC8B;AAC1C;AACK;AACC;AACa;AACK;AAQ9D;IAOE,+BACU,KAAuB,EACvB,IAAgB;QADhB,UAAK,GAAL,KAAK,CAAkB;QACvB,SAAI,GAAJ,IAAI,CAAY;QAR1B,kBAAa,GAAgC,+CAAE,CAAC,EAAE,CAAC,CAAC;QACpD,aAAQ,GAA8B,+CAAE,CAAC,EAAE,CAAC,CAAC;QAI7C,aAAQ,GAAG,+CAAE,CAAC,KAAK,CAAC,CAAC;QAKnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yDAAe,CAAC;IAEpD,CAAC;IACD,wCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,IAAU;YACnD,KAAI,CAAC,QAAQ,GAAG,6EAAuB,CAAC,IAAI,CAAC,CAAC;YAC9C,KAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;YACnB,KAAI,CAAC,QAAQ,GAAG;gBACd,KAAK,EAAE,EAAE;gBACT,OAAO,EAAE,IAAI,CAAC,GAAG;gBACjB,OAAO,EAAE,EAAE;aACZ;YACD,KAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAC7B,KAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,QAAQ;YAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC,iCAAgC;IAC9G,CAAC;IACD,0CAAU,GAAV;QACE,IAAI,CAAC,QAAQ,GAAG,mDAAK,IAAI,CAAC,QAAQ,IAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,GAAE,CAAC;IAC/D,CAAC;IACD,8CAAc,GAAd,UAAe,MAAc;QAA7B,iBAKC;QAJC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,oEAAY,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,mDAAK,MAAM,IAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,IAAG;aACnD,SAAS,CAAC,WAAC;YACV,YAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,mEAAW,EAAE,CAAC;QAAlC,CAAkC,CAAC,CAAC;IAC1C,CAAC;IACD,yCAAS,GAAT;QAAA,iBAOC;QANC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,oEAAY,EAAE,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC;aACrC,SAAS,CAAC,WAAC;YACV,KAAI,CAAC,UAAU,EAAE,CAAC;YAClB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,mEAAW,EAAE,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IACD,2CAAW,GAAX,UAAY,KAAwB;QAClC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;SACpD;IACH,CAAC;;gBAzCgB,iDAAK;gBACN,uDAAU;;IATf,qBAAqB;QAJjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,2NAAuC;SACxC,CAAC;+EASiB,iDAAK;YACN,uDAAU;OATf,qBAAqB,CAkDjC;IAAD,4BAAC;CAAA;AAlDiC","file":"ask-adoc-ask-adoc-module.js","sourcesContent":["import { __assign } from 'tslib';\nimport { InjectionToken, Injectable, Inject, defineInjectable, inject, Component, forwardRef, ViewEncapsulation, Input, Output, ViewChild, ElementRef, EventEmitter, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar DEFAULT_LIBRARY_BUTTONS = {\n    list1: {\n        label: 'UL',\n        title: 'Unordered List',\n        command: 'insertunorderedlist',\n        styleClass: 'list-ul',\n        icon: 'icon-list-ul'\n    },\n    list2: {\n        label: 'OL',\n        title: 'Ordered List',\n        command: 'insertorderedlist',\n        styleClass: 'list-ol',\n        icon: 'icon-list-ol'\n    },\n    bold: {\n        label: 'B',\n        title: 'Bold',\n        command: 'bold',\n        styleClass: 'bold',\n        icon: 'icon-bold'\n    },\n    italic: {\n        label: 'I',\n        title: 'Italic',\n        command: 'italic',\n        styleClass: 'italic',\n        icon: 'icon-italic'\n    },\n    link: {\n        label: 'Link',\n        title: 'Link',\n        command: 'createlink',\n        styleClass: 'link',\n        icon: 'icon-link'\n    },\n    underline: {\n        label: 'U',\n        title: 'Underline',\n        command: 'underline',\n        styleClass: 'format-underlined',\n        icon: 'icon-underline'\n    }\n};\n/** @type {?} */\nvar CUSTOM_LIBRARY_BUTTONS = {\n    edithtml: {\n        label: 'Edit HTML',\n        title: 'Edit HTML',\n        command: (/**\n         * @param {?} ctx\n         * @return {?}\n         */\n        function (ctx) {\n            ctx.editMode = !ctx.editMode;\n        }),\n        styleClass: 'nw-button--source',\n        icon: '',\n    }\n};\n/** @type {?} */\nvar BUTTONS = new InjectionToken('BUTTONS');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgxWigToolbarService = /** @class */ (function () {\n    function NgxWigToolbarService(buttonLibraryConfig) {\n        this._defaultButtonsList = [];\n        this._buttonLibrary = buttonLibraryConfig.reduce((/**\n         * @param {?} acc\n         * @param {?} val\n         * @return {?}\n         */\n        function (acc, val) { return (__assign({}, acc, val)); }), {});\n        this._defaultButtonsList = Object.keys(this._buttonLibrary);\n    }\n    /**\n     * @param {?} buttons\n     * @return {?}\n     */\n    NgxWigToolbarService.prototype.setButtons = /**\n     * @param {?} buttons\n     * @return {?}\n     */\n    function (buttons) {\n        if (!Array.isArray(buttons)) {\n            throw new Error('Argument \"buttons\" should be an array');\n        }\n        this._defaultButtonsList = buttons;\n    };\n    /**\n     * @param {?} name\n     * @param {?} title\n     * @param {?} command\n     * @param {?} styleClass\n     * @param {?} icon\n     * @return {?}\n     */\n    NgxWigToolbarService.prototype.addStandardButton = /**\n     * @param {?} name\n     * @param {?} title\n     * @param {?} command\n     * @param {?} styleClass\n     * @param {?} icon\n     * @return {?}\n     */\n    function (name, title, command, styleClass, icon) {\n        if (!name || !title || !command) {\n            throw new Error('Arguments \"name\", \"title\" and \"command\" are required');\n        }\n        styleClass = styleClass || '';\n        this._buttonLibrary[name] = { title: title, command: command, styleClass: styleClass, icon: icon };\n        this._defaultButtonsList.push(name);\n    };\n    /**\n     * @param {?=} buttonsList\n     * @return {?}\n     */\n    NgxWigToolbarService.prototype.getToolbarButtons = /**\n     * @param {?=} buttonsList\n     * @return {?}\n     */\n    function (buttonsList) {\n        var _this = this;\n        /** @type {?} */\n        var buttons = this._defaultButtonsList;\n        /** @type {?} */\n        var toolbarButtons = [];\n        if (typeof buttonsList !== 'undefined') {\n            buttons = string2array(buttonsList);\n        }\n        buttons.forEach((/**\n         * @param {?} buttonKey\n         * @return {?}\n         */\n        function (buttonKey) {\n            if (!buttonKey) {\n                return;\n            }\n            if (!_this._buttonLibrary[buttonKey]) {\n                throw new Error(\"There is no \\\"\" + buttonKey + \"\\\" in your library. Possible variants: \" + Object.keys(_this._buttonLibrary));\n            }\n            /** @type {?} */\n            var button = Object.assign({}, _this._buttonLibrary[buttonKey]);\n            // button.isActive = () => {return !!this.command && document.queryCommandState(this.command);}\n            toolbarButtons.push(button);\n        }));\n        return toolbarButtons;\n    };\n    NgxWigToolbarService.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root'\n                },] }\n    ];\n    /** @nocollapse */\n    NgxWigToolbarService.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [BUTTONS,] }] }\n    ]; };\n    /** @nocollapse */ NgxWigToolbarService.ngInjectableDef = defineInjectable({ factory: function NgxWigToolbarService_Factory() { return new NgxWigToolbarService(inject(BUTTONS)); }, token: NgxWigToolbarService, providedIn: \"root\" });\n    return NgxWigToolbarService;\n}());\n/**\n * @param {?} keysString\n * @return {?}\n */\nfunction string2array(keysString) {\n    return keysString\n        .split(',')\n        .map(Function.prototype.call, String.prototype.trim);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@dynamic\n */\nvar NgxWigComponent = /** @class */ (function () {\n    function NgxWigComponent(_ngWigToolbarService, document, // cannot set Document here - Angular issue - https://github.com/angular/angular/issues/20351\n    window) {\n        this._ngWigToolbarService = _ngWigToolbarService;\n        this.document = document;\n        this.window = window;\n        this.contentChange = new EventEmitter();\n        this.editMode = false;\n        this.toolbarButtons = [];\n        this.hasFocus = false;\n        this.propagateChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        function (_) { });\n        this.propagateTouched = (/**\n         * @return {?}\n         */\n        function () { });\n    }\n    /**\n     * @param {?} command\n     * @param {?=} options\n     * @return {?}\n     */\n    NgxWigComponent.prototype.execCommand = /**\n     * @param {?} command\n     * @param {?=} options\n     * @return {?}\n     */\n    function (command, options) {\n        if (typeof command === 'function') {\n            command(this);\n            return true;\n        }\n        if (this.editMode) {\n            return false;\n        }\n        if (this.document.queryCommandSupported && !this.document.queryCommandSupported(command)) {\n            throw new Error(\"The command \\\"\" + command + \"\\\" is not supported\");\n        }\n        if (command === 'createlink' || command === 'insertImage') {\n            options = window.prompt('Please enter the URL', 'http://') || '';\n            if (!options) {\n                return false;\n            }\n        }\n        this.container.focus();\n        // use insertHtml for `createlink` command to account for IE/Edge purposes, in case there is no selection\n        /** @type {?} */\n        var selection = this.document.getSelection().toString();\n        if (command === 'createlink' && selection === '') {\n            this.document.execCommand('insertHtml', false, '<a href=\"' + options + '\">' + options + '</a>');\n        }\n        else {\n            this.document.execCommand(command, false, options);\n        }\n        this.onContentChange(this.container.innerHTML);\n        return true;\n    };\n    /**\n     * @return {?}\n     */\n    NgxWigComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.toolbarButtons = this._ngWigToolbarService.getToolbarButtons(this.buttons);\n        this.container = this.ngxWigEditable.nativeElement;\n        if (this.content) {\n            this.container.innerHTML = this.content;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgxWigComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        // Workaround for IE11 which doesn't fire 'input' event on\n        // contenteditable\n        // https://stackoverflow.com/a/49287032/7369511\n        var _this = this;\n        // check if the browser is IE:\n        if (window.document['documentMode']) {\n            this._mutationObserver = new MutationObserver((/**\n             * @return {?}\n             */\n            function () {\n                _this.onContentChange(_this.container.innerHTML);\n            }));\n            this._mutationObserver.observe(this.container, { childList: true, subtree: true, characterData: true });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgxWigComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._mutationObserver) {\n            this._mutationObserver.disconnect();\n        }\n    };\n    /**\n     * @param {?} newContent\n     * @return {?}\n     */\n    NgxWigComponent.prototype.onContentChange = /**\n     * @param {?} newContent\n     * @return {?}\n     */\n    function (newContent) {\n        this.content = newContent;\n        this.contentChange.emit(this.content);\n        this.propagateChange(this.content);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgxWigComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (this.container && changes['content']) {\n            // clear the previous content\n            this.container.innerHTML = '';\n            // add the new content\n            this.pasteHtmlAtCaret(changes['content'].currentValue);\n        }\n    };\n    /**\n     * @param {?} newContent\n     * @return {?}\n     */\n    NgxWigComponent.prototype.onTextareaChange = /**\n     * @param {?} newContent\n     * @return {?}\n     */\n    function (newContent) {\n        // model -> view\n        this.container.innerHTML = newContent;\n        this.onContentChange(newContent);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgxWigComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!value) {\n            value = '';\n        }\n        this.container.innerHTML = value;\n        this.onContentChange(value);\n    };\n    /**\n     * @return {?}\n     */\n    NgxWigComponent.prototype.shouldShowPlaceholder = /**\n     * @return {?}\n     */\n    function () {\n        return !!this.placeholder\n            && !this.container.innerText;\n    };\n    /**\n     * @private\n     * @param {?} html\n     * @return {?}\n     */\n    NgxWigComponent.prototype.pasteHtmlAtCaret = /**\n     * @private\n     * @param {?} html\n     * @return {?}\n     */\n    function (html) {\n        /** @type {?} */\n        var sel;\n        /** @type {?} */\n        var range;\n        if (window.getSelection) {\n            sel = window.getSelection();\n            if (sel.getRangeAt && sel.rangeCount) {\n                range = sel.getRangeAt(0);\n                range.deleteContents();\n                // append the content in a temporary div\n                /** @type {?} */\n                var el = this.document.createElement('div');\n                el.innerHTML = html;\n                /** @type {?} */\n                var frag = this.document.createDocumentFragment();\n                /** @type {?} */\n                var node = void 0;\n                /** @type {?} */\n                var lastNode = void 0;\n                while ((node = el.firstChild)) {\n                    lastNode = frag.appendChild(node);\n                }\n                range.insertNode(frag);\n                // Preserve the selection\n                if (lastNode) {\n                    range = range.cloneRange();\n                    range.setStartAfter(lastNode);\n                    range.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgxWigComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.propagateChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgxWigComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.propagateTouched = fn;\n    };\n    /**\n     * @return {?}\n     */\n    NgxWigComponent.prototype.onBlur = /**\n     * @return {?}\n     */\n    function () {\n        this.hasFocus = false;\n        this.propagateTouched();\n    };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NgxWigComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    NgxWigComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngx-wig',\n                    template: \"<div class=\\\"ng-wig\\\">\\n    <ul class=\\\"nw-toolbar\\\">\\n      <li *ngFor=\\\"let button of toolbarButtons\\\"\\n          class=\\\"nw-toolbar__item\\\">\\n        <div>\\n          <button type=\\\"button\\\"\\n                  class=\\\"nw-button\\\"\\n                  [ngClass]=\\\"[button.styleClass]\\\"\\n                  [title]=\\\"button.title\\\"\\n                  (click)=\\\"execCommand(button.command)\\\"\\n                  [disabled]=\\\"disabled\\\"\\n                  tabindex=\\\"-1\\\">\\n            <ng-container *ngIf=\\\"!button.icon\\\">{{ button.label }}</ng-container>\\n            <div *ngIf=\\\"button.icon\\\"\\n                 class=\\\"icon\\\"\\n                 [ngClass]=\\\"[button.icon]\\\">\\n            </div>\\n          </button>\\n        </div>\\n      </li>\\n    </ul>\\n\\n    <div class=\\\"nw-editor-container\\\"\\n         (click)=\\\"container.focus()\\\"\\n         [ngClass]=\\\"{ 'nw-editor-container--with-toolbar': toolbarButtons.length }\\\">\\n      <div *ngIf=\\\"editMode\\\"\\n           class=\\\"nw-editor__src-container\\\">\\n        <textarea [ngModel]=\\\"content\\\"\\n                  (ngModelChange)=\\\"onTextareaChange($event)\\\"\\n                  (blur)=\\\"propagateTouched()\\\"\\n                  class=\\\"nw-editor__src\\\">\\n        </textarea>\\n      </div>\\n      <div class=\\\"nw-editor\\\"\\n           [ngClass]=\\\"{ 'nw-disabled': disabled,'nw-invisible': editMode }\\\">\\n        <div *ngIf=\\\"shouldShowPlaceholder()\\\"\\n             class=\\\"nw-editor__placeholder\\\"\\n             [innerText]=\\\"placeholder\\\">\\n        </div>\\n        <div #ngWigEditable\\n             class=\\\"nw-editor__res\\\"\\n             [attr.contenteditable]=\\\"!disabled\\\"\\n             [ngClass]=\\\"{ disabled: disabled}\\\"\\n             (focus)=\\\"hasFocus = true\\\"\\n             (blur)=\\\"onBlur()\\\"\\n             (input)=\\\"onContentChange(ngWigEditable.innerHTML)\\\"><!--\\n    --></div>\\n      </div>\\n    </div>\\n  </div>\\n\",\n                    providers: [\n                        NgxWigToolbarService,\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef((/**\n                             * @return {?}\n                             */\n                            function () { return NgxWigComponent; })),\n                            multi: true\n                        }\n                    ],\n                    encapsulation: ViewEncapsulation.None,\n                    styles: [\".ng-wig,[class^=nw-]{-o-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box}.ng-wig{display:block;padding:0;margin:0}.nw-toolbar{display:block;margin:0;padding:0;list-style:none;font-size:12px;color:#6b7277;background:linear-gradient(180deg,#fff 0,#f9f9f9 100%);border:1px solid #ccc;border-radius:3px 3px 0 0}.nw-toolbar__item{display:inline-block;vertical-align:top;margin:0;border-right:1px solid #dedede}.nw-toolbar label{line-height:30px;display:inline-block;padding:0 6px 0 3px}.nw-toolbar input[type=checkbox]{vertical-align:-3px;margin-right:-1px}.nw-editor{display:block;position:relative;height:300px;background:#fff;cursor:text;width:100%;overflow-y:auto}.nw-editor-container{border:1px solid #ccc;border-radius:0 0 3px 3px;position:relative}.nw-editor-container--with-toolbar{border-top:none}.nw-editor__res{display:block;min-height:100%;padding:1px 8px}.nw-editor__placeholder{display:block;position:absolute;padding:1px 8px;color:#d3d3d3;width:100%}.nw-editor__res,.nw-editor__src{width:100%;outline:0;box-sizing:border-box;border:none;margin:0}.nw-editor__res.disabled{opacity:.5}.nw-editor__src-container{position:absolute;left:0;top:0;right:0;bottom:0}.nw-editor__src{height:100%;resize:none;padding:1px 8px}.nw-editor--fixed .nw-editor{display:block;overflow-y:auto}.nw-editor--fixed .nw-editor__res{padding:1px 8px;display:block}.nw-invisible{visibility:hidden}.nw-editor--fixed .nw-invisible{display:none}.nw-editor.nw-disabled{cursor:default}.nw-button{-webkit-appearance:none;-moz-appearance:none;appearance:none;display:block;width:30px;height:30px;margin:0;padding:0;opacity:.5;line-height:30px;background-color:transparent;background-position:center center;background-repeat:no-repeat;border:none;border-radius:2px;cursor:pointer}.nw-button:focus{outline:0;border-color:#d3d3d3;border-style:solid}.nw-button.nw-button--active,.nw-button:hover{opacity:1}.nw-button--active{background-color:#eee}.nw-button:disabled{cursor:default}.nw-button:disabled:hover{opacity:.5}.nw-content{padding:12px;margin:0;font-family:sans-serif;font-size:14px;line-height:24px}.nw-select{height:30px;padding:6px;color:#555;background-color:inherit;border:0}.nw-select:disabled{opacity:.5}.nw-select:focus{outline:0}[contenteditable]:empty:before{content:attr(placeholder);color:grey;display:inline-block}.icon{display:inline-block;height:1em;width:1em;vertical-align:-.125em}.icon-bold{background:url(\\\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M747 1521q74 32 140 32 376 0 376-335 0-114-41-180-27-44-61.5-74t-67.5-46.5-80.5-25-84-10.5-94.5-2q-73 0-101 10 0 53-.5 159t-.5 158q0 8-1 67.5t-.5 96.5 4.5 83.5 12 66.5zm-14-746q42 7 109 7 82 0 143-13t110-44.5 74.5-89.5 25.5-142q0-70-29-122.5t-79-82-108-43.5-124-14q-50 0-130 13 0 50 4 151t4 152q0 27-.5 80t-.5 79q0 46 1 69zm-541 889l2-94q15-4 85-16t106-27q7-12 12.5-27t8.5-33.5 5.5-32.5 3-37.5.5-34v-65.5q0-982-22-1025-4-8-22-14.5t-44.5-11-49.5-7-48.5-4.5-30.5-3l-4-83q98-2 340-11.5t373-9.5q23 0 68 .5t68 .5q70 0 136.5 13t128.5 42 108 71 74 104.5 28 137.5q0 52-16.5 95.5t-39 72-64.5 57.5-73 45-84 40q154 35 256.5 134t102.5 248q0 100-35 179.5t-93.5 130.5-138 85.5-163.5 48.5-176 14q-44 0-132-3t-132-3q-106 0-307 11t-231 12z'/%3E%3C/svg%3E\\\") no-repeat}.icon-check{background:url(\\\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1671 566q0 40-28 68l-724 724-136 136q-28 28-68 28t-68-28l-136-136-362-362q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 295 656-657q28-28 68-28t68 28l136 136q28 28 28 68z'/%3E%3C/svg%3E\\\") no-repeat}.icon-italic{background:url(\\\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M384 1662l17-85q22-7 61.5-16.5t72-19 59.5-23.5q28-35 41-101 1-7 62-289t114-543.5 52-296.5v-25q-24-13-54.5-18.5t-69.5-8-58-5.5l19-103q33 2 120 6.5t149.5 7 120.5 2.5q48 0 98.5-2.5t121-7 98.5-6.5q-5 39-19 89-30 10-101.5 28.5t-108.5 33.5q-8 19-14 42.5t-9 40-7.5 45.5-6.5 42q-27 148-87.5 419.5t-77.5 355.5q-2 9-13 58t-20 90-16 83.5-6 57.5l1 18q17 4 185 31-3 44-16 99-11 0-32.5 1.5t-32.5 1.5q-29 0-87-10t-86-10q-138-2-206-2-51 0-143 9t-121 11z'/%3E%3C/svg%3E\\\") no-repeat}.icon-link{background:url(\\\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1520 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zm-703-705q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zm895 705q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z'/%3E%3C/svg%3E\\\") no-repeat}.icon-list-ol{background:url(\\\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M381 1620q0 80-54.5 126t-135.5 46q-106 0-172-66l57-88q49 45 106 45 29 0 50.5-14.5t21.5-42.5q0-64-105-56l-26-56q8-10 32.5-43.5t42.5-54 37-38.5v-1q-16 0-48.5 1t-48.5 1v53h-106v-152h333v88l-95 115q51 12 81 49t30 88zm2-627v159h-362q-6-36-6-54 0-51 23.5-93t56.5-68 66-47.5 56.5-43.5 23.5-45q0-25-14.5-38.5t-39.5-13.5q-46 0-81 58l-85-59q24-51 71.5-79.5t105.5-28.5q73 0 123 41.5t50 112.5q0 50-34 91.5t-75 64.5-75.5 50.5-35.5 52.5h127v-60h105zm1409 319v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zm-1408-899v99h-335v-99h107q0-41 .5-121.5t.5-121.5v-12h-2q-8 17-50 54l-71-76 136-127h106v404h108zm1408 387v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zm0-512v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z'/%3E%3C/svg%3E\\\") no-repeat}.icon-list-ul{background:url(\\\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M384 1408q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm0-512q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1408 416v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zm-1408-928q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1408 416v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zm0-512v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z'/%3E%3C/svg%3E\\\") no-repeat}.icon-underline{background:url(\\\"data:image/svg+xml;charset=utf8,%3C?xml version='1.0' encoding='utf-8'?%3E%3Csvg width='11' height='11' viewBox='0 0 1792 1792' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M176 223q-37-2-45-4l-3-88q13-1 40-1 60 0 112 4 132 7 166 7 86 0 168-3 116-4 146-5 56 0 86-2l-1 14 2 64v9q-60 9-124 9-60 0-79 25-13 14-13 132 0 13 .5 32.5t.5 25.5l1 229 14 280q6 124 51 202 35 59 96 92 88 47 177 47 104 0 191-28 56-18 99-51 48-36 65-64 36-56 53-114 21-73 21-229 0-79-3.5-128t-11-122.5-13.5-159.5l-4-59q-5-67-24-88-34-35-77-34l-100 2-14-3 2-86h84l205 10q76 3 196-10l18 2q6 38 6 51 0 7-4 31-45 12-84 13-73 11-79 17-15 15-15 41 0 7 1.5 27t1.5 31q8 19 22 396 6 195-15 304-15 76-41 122-38 65-112 123-75 57-182 89-109 33-255 33-167 0-284-46-119-47-179-122-61-76-83-195-16-80-16-237v-333q0-188-17-213-25-36-147-39zm1488 1409v-64q0-14-9-23t-23-9h-1472q-14 0-23 9t-9 23v64q0 14 9 23t23 9h1472q14 0 23-9t9-23z'/%3E%3C/svg%3E\\\") no-repeat}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    NgxWigComponent.ctorParameters = function () { return [\n        { type: NgxWigToolbarService },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n        { type: undefined, decorators: [{ type: Inject, args: ['WINDOW',] }] }\n    ]; };\n    NgxWigComponent.propDecorators = {\n        content: [{ type: Input }],\n        placeholder: [{ type: Input }],\n        buttons: [{ type: Input }],\n        disabled: [{ type: Input }],\n        contentChange: [{ type: Output }],\n        ngxWigEditable: [{ type: ViewChild, args: ['ngWigEditable', { read: ElementRef },] }]\n    };\n    return NgxWigComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction getWindowObject() {\n    return window;\n}\nvar ɵ0 = DEFAULT_LIBRARY_BUTTONS, ɵ1 = CUSTOM_LIBRARY_BUTTONS;\nvar NgxWigModule = /** @class */ (function () {\n    function NgxWigModule() {\n    }\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    NgxWigModule.forRoot = /**\n     * @param {?=} config\n     * @return {?}\n     */\n    function (config) {\n        return {\n            ngModule: NgxWigModule,\n            providers: [\n                provideButtons(config),\n                { provide: 'WINDOW', useFactory: getWindowObject },\n            ],\n        };\n    };\n    /**\n     * @return {?}\n     */\n    NgxWigModule.forChild = /**\n     * @return {?}\n     */\n    function () {\n        return { ngModule: NgxWigModule };\n    };\n    NgxWigModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        NgxWigComponent\n                    ],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                    ],\n                    exports: [NgxWigComponent],\n                    providers: [\n                        { provide: BUTTONS, multi: true, useValue: ɵ0 },\n                        { provide: BUTTONS, multi: true, useValue: ɵ1 },\n                        { provide: 'WINDOW', useFactory: getWindowObject },\n                    ]\n                },] }\n    ];\n    return NgxWigModule;\n}());\n/**\n * @param {?=} config\n * @return {?}\n */\nfunction provideButtons(config) {\n    if (!config || !config.buttonsConfig) {\n        return [\n            { provide: BUTTONS, multi: true, useValue: DEFAULT_LIBRARY_BUTTONS },\n        ];\n    }\n    return [\n        { provide: BUTTONS, multi: true, useValue: config.buttonsConfig },\n    ];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BUTTONS, CUSTOM_LIBRARY_BUTTONS, DEFAULT_LIBRARY_BUTTONS, NgxWigComponent, NgxWigModule, NgxWigToolbarService, getWindowObject, provideButtons };\n//# sourceMappingURL=ngx-wig.js.map\n","module.exports = \"<mat-tab-group mat-stretch-tabs backgroundColor=\\\"primary\\\" color=\\\"accent\\\" (selectedTabChange)=\\\"onTabChange($event)\\\">\\n  <mat-tab label=\\\"Preguntas\\\" *ngIf=\\\"isDoctor\\\">\\n\\n    <div class=\\\"loading-shade\\\" *ngIf=\\\"($loading | async)\\\">\\n      <mat-spinner></mat-spinner>\\n    </div>\\n    <panadoc-card-question [doctorId]='id' (answerEmitter)=\\\"answerQuestion($event)\\\" [question]=\\\"q\\\" [asker]=\\\"q.askerId\\\"\\n      *ngFor=\\\"let q of $newQuestions | async as newQ\\\">\\n    </panadoc-card-question>\\n  </mat-tab>\\n  <mat-tab label=\\\"Nueva Pregunta\\\" *ngIf=\\\"!isDoctor\\\">\\n    <mat-card class=\\\"new-question\\\" fxLayout=\\\"column\\\">\\n\\n      <div class=\\\"loading-shade\\\" *ngIf=\\\"($loading | async)\\\">\\n        <mat-spinner></mat-spinner>\\n      </div>\\n      <div class=\\\"options\\\" fxLayout=\\\"row\\\" [ngStyle]=\\\"{ width: '100%' }\\\" fxLayoutAlign=\\\"space-between center\\\">\\n        <button (click)=\\\"clickReset()\\\" mat-icon-button>\\n          <mat-icon>restore</mat-icon>\\n        </button>\\n        <mat-form-field fxFlex=\\\"90%\\\" fxFlexFill>\\n          <input [(ngModel)]=\\\"question.title\\\" matInput placeholder=\\\"¿Cual es tu pregunta?\\\" />\\n        </mat-form-field>\\n        <button (click)=\\\"clickSend()\\\" disabled=\\\"question.title!==''&&question.details!==''\\\" mat-icon-button>\\n          <mat-icon>send</mat-icon>\\n        </button>\\n      </div>\\n      <div class=\\\"title\\\">\\n\\n        <ngx-wig (contentChange)=\\\"question.details=$event\\\" placeholder=\\\"Escriba los detalles de su pregunta aqui\\\">\\n        </ngx-wig>\\n      </div>\\n\\n    </mat-card>\\n  </mat-tab>\\n  <mat-tab label=\\\"Respondidas\\\">\\n    <div class=\\\"loading-shade\\\" *ngIf=\\\"($loading | async)\\\">\\n      <mat-spinner></mat-spinner>\\n    </div>\\n    <ng-container *ngIf=\\\"$answers | async as answers; else questions\\\">\\n      <panadoc-card-answer *ngFor=\\\"let a of answers\\\" [question]=\\\"question\\\" [answerer]=\\\"a.doctorId\\\" [answer]=\\\"a\\\"\\n        [asker]=\\\"a.doctorId\\\">\\n      </panadoc-card-answer>\\n    </ng-container>\\n    <ng-template #questions>\\n      <h5>No hay preguntas</h5>\\n    </ng-template>\\n\\n\\n  </mat-tab>\\n</mat-tab-group>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxWigModule } from 'ngx-wig';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AskContainerComponent } from './askadoc.component';\nimport { UiModule } from '@panadoc/ui';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { FlexModule } from '@angular/flex-layout';\nconst routes: Routes = [\n  {\n    path: '',\n    component: AskContainerComponent\n  }\n];\n\n@NgModule({\n  declarations: [AskContainerComponent],\n  imports: [CommonModule, UiModule,\n    RouterModule.forChild(routes), FlexModule, FormsModule, NgxWigModule, ReactiveFormsModule]\n})\nexport class AskADocModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  Answer,\n  Question,\n} from '@panadoc/data';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { HttpService } from '../http-service-base.service';\nimport { map, switchMap, catchError } from 'rxjs/operators';\n\nconst baseURL = environment.httpServer + '/askadoc';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AskService extends HttpService {\n  constructor(private http: HttpClient) {\n    super();\n  }\n  postAnswer(answer: Answer): Observable<boolean> {\n    return this.http.put(`${baseURL}/${answer.questionId}`, answer, this.headers)\n      .pipe(map(response => { return (!!response as boolean); }))\n  }\n\n  postNewQuestion(question: Question): Observable<boolean> {\n    return this.http.post(baseURL, question, this.headers).pipe(\n      switchMap(response => {\n        return of(!!response);\n      }))\n  }\n\n  fetchAvailableQuestions(): Observable<Array<Question>> {\n\n    return this.http.get<any[]>(baseURL + '/unanswered', this.headers)\n      .pipe(\n        map(questions =>\n          questions.map(v => {\n            const question: Question = {\n              uid: v.uid,\n              askerId: v.userId,\n              title: v.title,\n              details: v._details,\n            }\n            return question;\n          })),\n        catchError(e => {\n          console.log(e);\n          return []\n        })\n      );\n  }\n\n  fetchAnsweredQuestions(): Observable<Array<Answer>> {\n    return this.http.get<Array<Answer>>(baseURL + '/answered', this.headers)\n      .pipe(\n        catchError(e => {\n          console.log(e);\n          return []\n        })\n      );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Answer, Question, User, determineIfUserIsDoctor } from '@panadoc/data';\nimport { Observable, of } from 'rxjs';\nimport { AskService } from './ask.service';\nimport { Store, select } from '@ngrx/store';\nimport { PanaState, loadingSelector } from '../reducers';\nimport { startLoading, stopLoading } from '../reducers/extra';\nimport { MatTabChangeEvent } from '@angular/material';\nimport { tap, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'panadoc-container',\n  templateUrl: './askadoc.component.html',\n})\nexport class AskContainerComponent implements OnInit {\n  $newQuestions: Observable<Array<Question>> = of([]);\n  $answers: Observable<Array<Answer>> = of([]);\n  isDoctor: boolean;\n  question: Question;\n  id;\n  $loading = of(false);\n  constructor(\n    private store: Store<PanaState>,\n    private http: AskService\n  ) {\n    this.$loading = this.store.select(loadingSelector)\n\n  }\n  ngOnInit() {\n    this.store.pipe(select('auth')).subscribe((user: User) => {\n      this.isDoctor = determineIfUserIsDoctor(user);\n      this.id = user.uid;\n      this.question = {\n        title: \"\",\n        askerId: user.uid,\n        details: \"\",\n      }\n      this.http.token = user.token;\n      this.question.askerId = user.uid;\n    });\n    if (this.isDoctor) this.$newQuestions = this.http.fetchAvailableQuestions();//.pipe(tap(v => { debugger }));\n  }\n  clickReset() {\n    this.question = { ...this.question, title: \"\", details: \"\" };\n  }\n  answerQuestion(answer: Answer) {\n    this.store.dispatch(startLoading());\n    this.http.postAnswer({ ...answer, doctorId: this.id })\n      .subscribe(v =>\n        this.store.dispatch(stopLoading()));\n  }\n  clickSend() {\n    this.store.dispatch(startLoading());\n    this.http.postNewQuestion(this.question)\n      .subscribe(v => {\n        this.clickReset();\n        this.store.dispatch(stopLoading());\n      });\n  }\n  onTabChange(event: MatTabChangeEvent) {\n    if (event.index === 1) {\n      this.$answers = this.http.fetchAnsweredQuestions();\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}